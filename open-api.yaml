openapi: 3.1.0
info:
  title: Meilisearch Core API
  description: 'Search documents, configure and manage the Meilisearch engine.'
  version: 0.27.0
  contact:
    name: Meilisearch
    email: bonjour@Meilisearch.com
  license:
    name: MIT
    url: 'https://github.com/Meilisearch/Meilisearch/blob/main/LICENSE'
  summary: 'An open source, blazingly fast and hyper relevant search-engine that will improve your search experience.'
servers:
  - url: '{protocol}://{domain}:{port}'
    variables:
      protocol:
        enum:
          - https
          - http
        default: https
      domain:
        default: example.meilisearch.com
      port:
        default: '7700'
    description: 'https://example.meilisearch.com:7700'
components:
  schemas:
    timestamp:
      type: string
      description: An `RFC 3339` format for date/time/duration.
      example: '2019-11-20T09:40:33.711324Z'
    index:
      type: object
      additionalProperties: false
      examples:
        - uid: movies
          name: movies
          primaryKey: movie_id
          createdAt: '2019-11-20T09:40:33.711324Z'
          updatedAt: '2019-11-20T09:40:33.711324Z'
      description: ''
      title: ''
      properties:
        uid:
          type: string
          example: movies
          description: Unique identifier for the index
        name:
          type: string
          description: Name of the index
        primaryKey:
          type:
            - string
            - 'null'
          nullable: true
          example: movie_id
          description: Custom primaryKey for documents
        createdAt:
          $ref: '#/components/schemas/timestamp'
        updatedAt:
          $ref: '#/components/schemas/timestamp'
      required:
        - uid
        - name
        - createdAt
        - updatedAt
    document:
      type: object
      additionalProperties: true
      example:
        id: 25684
        title: American Ninja 5
        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'
        release_date: '1993-01-01'
      description: 'A document made of attribute. The maximum number of attribute for a document is 65,535.'
    matchesInfo:
      type: object
      properties:
        start:
          type: integer
        length:
          type: integer
      additionalProperties: false
      required:
        - start
        - length
      description: Starting position and length in bytes of the matched term in the returned value
    hit:
      type: object
      additionalProperties: true
      example:
        id: 25684
        title: American Ninja 5
        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'
        release_date: '1993-01-01'
        _formatted:
          id: 25684
          title: American Ninja 5
          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
          overview: 'When a scientists daughter is kidnapped, American <em>Ninja</em>, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the <em>ninja</em>.'
          release_date: '1993-01-01'
        _matchesInfo:
          overview:
            - start: 49
              length: 5
            - start: 155
              length: 5
      examples:
        - id: 25684
          title: American Ninja 5
          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
          overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'
          release_date: '1993-01-01'
          _formatted:
            id: 25684
            title: American Ninja 5
            poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
            overview: 'When a scientists daughter is kidnapped, American <em>Ninja</em>, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the <em>ninja</em>.'
            release_date: '1993-01-01'
          _matchesInfo:
            overview:
              - start: 49
                length: 5
              - start: 155
                length: 5
      description: ''
      properties:
        _formatted:
          type: object
          description: Only present if `attributesToHighlight`/`attributesToCrop` is not empty. Return highlighted and cropped fields.
          additionalProperties: true
        _matchesInfo:
          type: object
          description: Only present if matches = `true`. Array of all search query occurrences in all fields.
          properties:
            '':
              $ref: '#/components/schemas/matchesInfo'
        attribute:
          type:
            - string
            - number
          description: Retrieve attributes of a search result. `attributesToRetrieve` controls these fields.
        _geoDistance:
          type: number
          description: 'Using _geoPoint({lat}, {lng}) built-in sort rule at search leads the engine to return a _geoDistance within the search results. This field represents the distance in meters of the document from the specified _geoPoint.'
    documentId:
      oneOf:
        - type: number
        - type: string
      example: 468219
    filter:
      description: |
        Attribute(s) to filter on.

        Can be made of 3 syntaxes

        - Nested Array: `["something > 1", "genres=comedy", ["genres=horror", "title=batman"]]`
        - String: `"something > 1 AND genres=comedy AND (genres=horror OR title=batman)"`
        - Mixed: `["something > 1 AND genres=comedy", "genres=horror OR title=batman"]`

        > info
        > _geoRadius({lat}, {lng}, {distance_in_meters}) built-in filter rule can be used to filter documents within a geo circle.

        > warn
        > Attribute(s) used in `filter` should be declared as filterable attributes. See [Filtering and Faceted Search](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html).
      example:
        - 'director:Mati Diop'
        - - 'genres:Comedy'
          - 'genres:Romance'
      title: filter
      oneOf:
        - type: array
          items:
            type: string
            pattern: '^[^:]+:[^:]+$'
        - type: string
          properties: {}
          pattern: '^[^:]+:[^:]+$'
        - type: array
          items:
            anyOf:
              - type: array
                items: {}
              - type: string
    sort:
      description: |
        Fields on which you want to sort the results.

        > warn
        > Attribute(s) used in `sort` should be declared as sortable attributes. See [Sorting](https://docs.meilisearch.com/reference/features/sorting.html).

        > info
        > _geoPoint({lat}, {long}) built-in sort rule can be used to sort documents around a geo point.
      example:
        - 'price:desc'
      title: sort
      oneOf:
        - type: array
          items:
            type: string
    searchResponse:
      type: object
      additionalProperties: false
      title: ''
      properties:
        hits:
          type: array
          description: Array of documents matching the search.
          items:
            $ref: '#/components/schemas/hit'
        offset:
          type: integer
          description: Number of documents skipped.
        limit:
          type: integer
          description: Number of returned documents.
        nbHits:
          type: integer
          description: Total number of candidates for this search in the database.
        exhaustiveNbHits:
          type: boolean
          description: Whether `nbHits` is exhaustive.
        facetsDistribution:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: integer
          description: |
            [Distribution of the given facets](https://docs.meilisearch.com/reference/features/search_parameters.html#facets-distribution).
          example:
            genres:
              action: 273
              animation: 118
              adventure: 132
              fantasy: 67
              comedy: 475
              mystery: 70
              thriller: 217
        exhaustiveFacetsCount:
          type: boolean
          description: Whether `facetsDistribution` is exhaustive.
        processingTimeMs:
          type: integer
          description: Processing time of the query.
        query:
          type: string
          description: Query originating the response.
          example: ninja
      required:
        - hits
        - offset
        - limit
        - nbHits
        - exhaustiveNbHits
        - processingTimeMs
        - query
    task:
      type: object
      description: |
        Meilisearch is an asynchronous API. It means that the API does not behave as you would typically expect when handling the request's responses.

        Some operations are put in a queue and will be executed in turn (asynchronously). In this case, the server response contains the identifier to track the execution of the operation.

        [Learn More](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html).
      additionalProperties: false
      examples:
        - uid: 0
          indexUid: movies
          batchUid: 0
          status: succeeded
          type: documentAddition
          details:
            receivedDocuments: 10
            indexedDocuments: 10
          duration: PT5S
          enqueuedAt: '2021-01-01T09:39:00.000000Z'
          startedAt: '2021-01-01T09:40:00.000000Z'
          finishedAt: '2021-01-01T09:40:05.000000Z'
      properties:
        uid:
          type: integer
          description: The unique sequential identifier of the task
        indexUid:
          type: string
          description: The unique identifier of the index where this task is operated
        batchUid:
          type: integer
          description: Identify in which batch a task has been grouped by auto-batching. It corresponds to the first task uid grouped within a batch.
        status:
          type: string
          description: The status of the task
          enum:
            - enqueued
            - processing
            - succeeded
            - failed
          example: succeeded
        type:
          type: string
          description: The type of the task
          enum:
            - documentAddition
            - documentPartial
            - documentDeletion
            - indexCreation
            - indexUpdate
            - indexDeletion
            - settingsUpdate
            - clearAll
        details:
          type: object
          description: Details information of the task payload.
          properties:
            receivedDocuments:
              type: integer
              description: Number of documents received for documentAddition or documentPartial task.
            indexedDocuments:
              type: integer
              description: Number of documents finally indexed for documentAddition or documentPartial task or if batched, in the batchUid.
            receivedDocumentsIds:
              type: integer
              description: Number of document ids received for documentDeletion task.
            deletedDocuments:
              type: integer
              description: 'Number of documents finally deleted for documentDeletion, indexDeletion or clearAll task.'
            primaryKey:
              type: string
              description: Value for the primaryKey field encountered if any for indexCreation or indexUpdate task.
            settings:
              $ref: '#/components/schemas/settings'
        error:
          description: Error object containing error details and context when a task has a failed status.
          $ref: '#/components/schemas/error'
        duration:
          type: string
          description: Total elasped time the engine was in processing state expressed as a `ISO-8601` duration format. Default is set to `null`
          nullable: true
        enqueuedAt:
          description: Represent the date and time as a `RFC 3339` format when the task has been enqueued
          $ref: '#/components/schemas/timestamp'
        startedAt:
          $ref: '#/components/schemas/timestamp'
          description: Represent the date and time as a `RFC 3339` format when the task has been dequeued and started to be processed. Default is set to `null`
          nullable: true
        finishedAt:
          $ref: '#/components/schemas/timestamp'
          description: Represent the date and time as a `RFC 3339` format when the task has failed or succeeded. Default is set to `null`
          nullable: true
      required:
        - uid
        - indexUid
        - batchUid
        - status
        - type
        - enqueuedAt
        - startedAt
        - finishedAt
    synonyms:
      type: object
      description: List of associated words treated similarly. A word associated to an array of word as synonyms.
      example:
        wolverine:
          - xmen
          - logan
        logan:
          - wolverine
          - xmen
        wow:
          - world of warcraft
    stopWords:
      type: array
      description: List of words ignored when present in search queries.
      items:
        type: string
      example:
        - of
        - the
        - to
    sortableAttributes:
      type: array
      description: List of attributes to sort on at search.
      items:
        type: string
      example:
        - price
        - author
        - title
    rankingRules:
      type: array
      description: |
        List of ranking rules sorted by order of importance. The order is customizable.

        [A list of ordered built-in ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html).
      items:
        type: string
      example:
        - words
        - typo
        - proximity
        - attribute
        - sort
        - exactness
        - 'release_date:asc'
      examples: []
    typoTolerance:
      type: object
      description: Customize typo tolerance feature.
      properties:
        enabled:
          description: Enable the typo tolerance feature.
          type: boolean
          default: true
          nullable: false
        disableOnAttributes:
          description: Disable the typo tolerance feature on the specified attributes.
          type: array
          items:
            type: string
          default: []
          nullable: false
        disableOnWords:
          description: Disable the typo tolerance feature for a set of query terms given for a search query.
          type: array
          items:
            type: string
          default: []
          nullable: false
        minWordSizeForTypos:
          type: object
          properties:
            oneTypo:
              description: Customize the minimum size for a word to tolerate 1 typo.
              type: integer
              default: 5
              nullable: false
            twoTypos:
              description: Customize the minimum size for a word to tolerate 2 typos.
              type: integer
              default: 9
              nullable: false
    filterableAttributes:
      type: array
      description: |
        Attributes to use for facetting and filtering. See [Filtering and Faceted Search](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html).
      items:
        type: string
      example:
        - genres
        - director
      title: filterableAttributes
    distinctAttribute:
      type: string
      description: Search returns documents with distinct (different) values of the given field.
      nullable: true
    searchableAttributes:
      type: array
      description: Fields in which to search for matching query words sorted by order of importance.
      items:
        type: string
      example:
        - title
        - description
        - genre
    displayedAttributes:
      type: array
      description: Fields displayed in the returned documents.
      items:
        type: string
      example:
        - title
        - description
        - genre
        - release_date
    settings:
      type: object
      description: |
        [Learn more about the settings in this guide](https://docs.meilisearch.com/reference/features/settings.html).
      additionalProperties: false
      properties:
        synonyms:
          $ref: '#/components/schemas/synonyms'
        stopWords:
          $ref: '#/components/schemas/stopWords'
        rankingRules:
          $ref: '#/components/schemas/rankingRules'
        filterableAttributes:
          $ref: '#/components/schemas/filterableAttributes'
        distinctAttribute:
          $ref: '#/components/schemas/distinctAttribute'
        searchableAttributes:
          $ref: '#/components/schemas/searchableAttributes'
        displayedAttributes:
          $ref: '#/components/schemas/displayedAttributes'
        typoTolerance:
          $ref: '#/components/schemas/typoTolerance'
      required:
        - synonyms
        - stopWords
        - rankingRules
        - filterableAttributes
        - distinctAttribute
        - searchableAttributes
        - displayedAttributes
        - typoTolerance
    stats:
      type: object
      additionalProperties: false
      title: ''
      examples:
        - numberOfDocuments: 10
          isIndexing: true
          fieldDistribution:
            genre: 10
            author: 9
      properties:
        numberOfDocuments:
          type: integer
          description: Number of documents contained in the index.
        isIndexing:
          type: boolean
          description: Whether or not the index is currently ingesting document
        fieldDistribution:
          type: object
          additionalProperties:
            type: integer
          description: How many documents contains a field
      required:
        - numberOfDocuments
        - isIndexing
        - fieldDistribution
    dumps:
      type: object
      additionalProperties: false
      examples:
        - uid: 20210719-114144097
          status: done
          startedAt: '2021-07-19T14:31:16.920473Z'
          finishedAt: '2021-07-19T14:32:16.920473Z'
      title: dumps
      description: ''
      properties:
        uid:
          type: string
          example: 20200929-114144097
          description: ' Unique identifier for the dump'
        status:
          type: string
          enum:
            - in_progress
            - failed
            - done
          example: in_progress
          description: Status of the dump
        startedAt:
          $ref: '#/components/schemas/timestamp'
        finishedAt:
          $ref: '#/components/schemas/timestamp'
      required:
        - uid
        - status
        - startedAt
    error:
      title: error
      type: object
      properties:
        message:
          type: string
        code:
          type: string
        type:
          type: string
        link:
          type: string
      required:
        - message
        - code
        - type
        - link
      description: ''
    key:
      title: key
      type: object
      properties:
        key:
          type: string
          description: The generated key. Generated by Meilisearch.
          example: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4
          readOnly: true
        actions:
          type: array
          description: 'A list of actions permitted for the key. ["*"] for all actions.'
          uniqueItems: false
          items:
            type: string
            example: documents.add
            enum:
              - search
              - documents.add
              - documents.get
              - documents.delete
              - indexes.create
              - indexes.get
              - indexes.update
              - indexes.delete
              - tasks.get
              - settings.get
              - settings.update
              - stats.get
              - dumps.create
              - dumps.get
              - version
        indexes:
          type: array
          description: 'A list of accesible indexes permitted for the key. ["*"] for all indexes.'
          items:
            type: string
            example: movies
        description:
          type:
            - string
            - 'null'
          description: A description for the key. null if empty.
          default: null
        expiresAt:
          type:
            - string
            - 'null'
          description: Represent the expiration date and time as RFC 3339 format. null equals to no expiration time.
        createdAt:
          type: string
          description: Represent the date and time as RFC 3339 format when the API key has been created. Generated by Meilisearch.
          example: '2021-11-12T10:00:00Z'
          readOnly: true
        updatedAt:
          type:
            - string
            - 'null'
          description: Represent the date and time as RFC 3339 format when the API key has been updated. Generated by Meilisearch.
          default: null
          readOnly: true
      required:
        - actions
        - indexes
        - expiresAt
      description: API keys are stored and managed by the master key holder. These are the keys used by the technical teams to interact with Meilisearch at the level of the client/server code. API keys can have restrictions on which methods can be accessed via an actions list; they can also expiresAt a specific date time and be restricted to a specific set of indexes.
  parameters:
    indexUid:
      name: indexUid
      in: path
      description: Index Unique Identifier
      required: true
      schema:
        type: string
        example: movies
    documentId:
      name: documentId
      in: path
      description: The document identifier
      required: true
      schema:
        type: any
    taskUid:
      name: taskUid
      in: path
      description: The task unique identifier
      required: true
      schema:
        type: number
    primaryKey:
      name: primaryKey
      in: query
      description: |
        The [primary key](https://docs.meilisearch.com/learn/core_concepts/documents.html#primary-key) of the documents. primaryKey is optional.
        If you want to set the primary key of your index through this route, it only has to be done the first time you add documents to the index. After which it will be ignored if given.
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Maximum number of documents to return.
      schema:
        type: number
        default: 20
    offset:
      name: offset
      in: query
      description: Number of documents to skip.
      schema:
        type: number
        default: 0
    q:
      name: q
      in: query
      description: Query string.
      schema:
        type: string
        example: back to the future
        default: '""'
    attributesToRetrieve:
      name: attributesToRetrieve
      in: query
      description: 'Comma-separated list of attributes whose fields will be present in the returned documents. Defaults to the [displayedAttributes list](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) which contains by default all attributes found in the documents.'
      schema:
        type: string
        items:
          type: string
        example: 'title,description'
        default: '*'
    attributesToHighlight:
      name: attributesToHighlight
      in: query
      description: Comma-separated list of attributes whose values will contain highlighted matching terms. Highlighted attributes are returned in `_formatted` response object.
      schema:
        type: string
        items:
          type: string
          default:
            - ''
        example: 'title,description'
    highlightPreTag:
      name: highlightPreTag
      in: query
      required: false
      description: Specify the tag to put before the highlighted query terms.
      schema:
        type: string
        default: '<em>'
    highlightPostTag:
      name: highlightPostTag
      in: query
      required: false
      description: Specify the tag to put after the highlighted query terms.
      schema:
        type: string
        default: '</em>'
    attributesToCrop:
      name: attributesToCrop
      in: query
      required: false
      schema:
        type: string
        example: 'overview:10'
      description: Comma-separated list of attributes whose values have to be cropped. Cropped attributes are returned in `_formatted` response object.
    cropMarker:
      name: cropMarker
      in: query
      description: Sets the crop marker to apply before and/or after cropped part selected within an attribute defined in `attributesToCrop` parameter.
      required: false
      schema:
        type: string
        default: '…'
    cropLength:
      name: cropLength
      in: query
      required: false
      schema:
        type: integer
        example: 5
        default: 10
      description: Sets the total number of words to keep around the matched part of an attribute specified in the `attributesToCrop` parameter.
    facetsDistribution:
      name: facetsDistribution
      in: query
      schema:
        type: string
        example: 'genres,author'
      description: 'Comma-separated list of attributes whose fields will be distributed as a facet. If you have [set up filterableAttributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes), you can retrieve the count of matching terms for each facets.[Learn more about facet distribution in the dedicated guide](https://docs.meilisearch.com/reference/features/search_parameters.html#facets-distribution)'
    matches:
      name: matches
      in: query
      required: false
      schema:
        type: boolean
        default: 'false'
      description: Defines whether an `_matchesInfo` object that contains information about the matches should be returned or not.
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        example: 'price:asc'
      description: |
        Fields on which you want to sort the results.

        > warn
        > Attribute(s) used in `sort` should be declared as sortable attributes. See [Sorting](https://docs.meilisearch.com/reference/features/sorting.html).

        > info
        > _geoPoint({lat}, {long}) built-in sort rule can be used to sort documents around a geo point.
    filter:
      name: filter
      in: query
      required: false
      schema:
        example: something > 1 AND genres=comedy AND (genres=horror OR title=batman)
      description: |
        Attribute(s) to filter on.

        Can be made of 3 syntaxes

        - Nested Array: `["something > 1", "genres=comedy", ["genres=horror", "title=batman"]]`
        - String: `something > 1 AND genres=comedy AND (genres=horror OR title=batman)`
        - Mixed: `["something > 1 AND genres=comedy", "genres=horror OR title=batman"]`

        > info
        > _geoRadius({lat}, {lng}, {distance_in_meters}) built-in filter rule can be used to filter documents within a geo circle.

        > warn
        > Attribute(s) used in `filter` should be declared as filterable attributes. See [Filtering and Faceted Search](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html).
    fields:
      name: fields
      in: query
      description: 'Comma-separated list of fields to display for an API resource. By default it contains all fields of an API resource.'
      schema:
        type: string
        items:
          type: string
        example: 'uid,createdAt'
        default: '*'
    Content-Type:
      name: Content-Type
      in: header
      required: true
      schema:
        type: string
        enum:
          - application/json
      description: Payload content-type
  responses:
    '202':
      description: Accepted
      content:
        application/json:
          schema:
            type: object
            properties:
              uid:
                type: number
                description: 'This `uid` allows you to [track the current task](https://docs.meilisearch.com/reference/api/tasks.html).'
              indexUid:
                type: string
                description: The unique identifier of the index where this task is operated
              status:
                type: string
                description: The status of the task
                example: enqueued
              enqueuedAt:
                $ref: '#/components/schemas/timestamp'
                description: Represent the date and time as `RFC 3339` format when the task has been enqueued
            additionalProperties: false
            required:
              - uid
              - indexUid
              - status
              - enqueuedAt
          examples:
            Example:
              value:
                uid: 0
                indexUid: movies
                status: enqueued
                enqueuedAt: '2021-07-19T14:31:16.920473Z'
    '204':
      description: No Content
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Unauthorized:
              value:
                message: The Authorization header is missing. It must use the bearer authorization method.
                code: missing_authorization_header
                type: auth
                link: 'https://docs.meilisearch.com/errors#missing_authorization_header'
    '413':
      description: Payload Too Large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error'
          examples:
            Payload Too Large:
              value:
                message: The provided payload reached the size limit.
                code: payload_too_large
                type: invalid_request
                link: 'https://docs.meilisearch.com/errors#payload_too_large'
  securitySchemes:
    apiKey:
      type: http
      in: header
      scheme: bearer
      description: |-
        An API key is a token that you provide when making API calls. Include the token in a header parameter called `Authorization`.

        Example: `Authorization: Bearer 8fece4405662dd830e4cb265e7e047aab2e79672a760a12712d2a263c9003509`
  examples: {}
tags:
  - name: Indexes
    description: |
      An index is an entity that gathers a set of [documents](https://docs.meilisearch.com/learn/core_concepts/documents.html) with its own settings.
      [Learn more about indexes](https://docs.meilisearch.com/learn/core_concepts/indexes.html).
  - name: Documents
    description: |
      Documents are objects composed of fields that can store any type of data.
      Each field contains an attribute and its associated value.
      Documents are stored inside [indexes](https://docs.meilisearch.com/learn/core_concepts/indexes.html).
      [Learn more about documents](https://docs.meilisearch.com/learn/core_concepts/documents.html).
  - name: Search
    description: |
      Meilisearch exposes 2 routes to perform searches:
      * A POST route: this is the preferred route when using API authentication, as it allows [preflight request](https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request) caching and better performances.
      * A GET route: the usage of this route is discouraged, unless you have good reason to do otherwise (specific caching abilities for example).
      Other than the differences mentioned above, the two routes are strictly equivalent.
  - name: Tasks
    description: |
      The `tasks` route gives information about the progress of the [asynchronous operations](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html).
  - name: Keys
    description: |
      Manage API `keys` for a Meilisearch instance. Each key has a given set of permissions.
      You must have the master key to access the `keys` route.
      [More information about the keys and their rights](https://docs.meilisearch.com/reference/features/security.html).
  - name: Settings
    description: |
      `Settings` is a list of all the __customization__ possible for an index.
      It is possible to update all the settings in one go or individually with the dedicated routes. Updates in the settings route are __partial__. This means that any parameters not provided in the body will be left unchanged.
      Updating the settings means overwriting the default settings of Meilisearch. You can reset to default values using the `DELETE` routes.
  - name: Stats
    description: |
      `Stats` gives extended information and metrics about indexes and the Meilisearch database.
  - name: Health
    description: |
      The health check endpoint enables you to periodically test the health of your Meilisearch instance.
  - name: Version
    description: |
      Current version of Meilisearch.
  - name: Dumps
    description: |
      The `dumps` route allows the creation of database dumps. Dumps are `.dump` files that can be used to launch Meilisearch. Dumps are compatible between Meilisearch versions.
      Creating a dump is also referred to as exporting it, whereas launching Meilisearch with a dump is referred to as importing it.
      During a [dump export](https://docs.meilisearch.com/reference/api/dump.html#create-a-dump), all indexes of the current instance are exported—together with their documents and settings—and saved as a single `.dump` file.
      During a dump import, all indexes contained in the indicated `.dump` file are imported along with their associated documents and settings. Any existing index with the same uid as an index in the dump file will be overwritten.
      Dump imports are [performed at launch](https://docs.meilisearch.com/reference/features/configuration.html#import-dump) using an option.
paths:
  /dumps:
    post:
      operationId: dumps.create
      summary: Create a Dump
      description: |
        Triggers a dump creation process. Once the process is complete, a dump is created in the [dumps directory](https://docs.meilisearch.com/reference/features/configuration.html#dumps-destination). If the dumps directory does not exist yet, it will be created.
      tags:
        - Dumps
      security:
        - apiKey: []
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dumps'
              examples:
                Created:
                  value:
                    uid: 20210719-114144097
                    status: in_progress
                    startedAt: '2021-07-19T14:31:16.920473Z'
        '401':
          $ref: '#/components/responses/401'
  '/dumps/{dumpUid}/status':
    get:
      operationId: dumps.get
      summary: Get dump status
      description: |
        Get the status of a dump creation process using the uid returned after calling the [dump creation route](https://docs.meilisearch.com/reference/api/dump.html#create-a-dump).

        The returned status could be:

        * `in_progress`: Dump creation is in progress.
        * `failed`: An error occured during dump process, and the task was aborted.
        * `done`: Dump creation is finished and was successful.
      tags:
        - Dumps
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dumps'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Not Found:
                  value:
                    message: Dump `20201001-110357260` not found
                    code: dump_not_found
                    type: invalid_request
                    link: 'https://docs.meilisearch.com/errors#dump_not_found'
    parameters:
      - schema:
          type: string
        name: dumpUid
        in: path
        required: true
  /health:
    get:
      operationId: health.check
      summary: Get health
      description: Get health of the Meilisearch instance.
      tags:
        - Health
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - available
                required:
                  - status
              examples:
                '200':
                  value:
                    status: available
      x-internal: false
  /indexes:
    get:
      operationId: indexes.list
      summary: List Indexes
      description: List all indexes.
      tags:
        - Indexes
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/index'
              examples:
                Example:
                  value:
                    - uid: movies
                      name: movies
                      primaryKey: movie_id
                      createdAt: '2019-11-20T09:40:33.711324Z'
                      updatedAt: '2019-11-20T09:40:33.711324Z'
        '401':
          $ref: '#/components/responses/401'
    post:
      operationId: indexes.create
      summary: Create Index
      description: Create an index.
      tags:
        - Indexes
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                primaryKey:
                  type: string
              additionalProperties: false
              required:
                - uid
            examples:
              Example:
                value:
                  uid: movies
                  primaryKey: movie_id
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/index'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Index already exists:
                  value:
                    message: 'Index `:indexUid` already exists.'
                    code: index_already_exists
                    type: invalid_request
                    link: 'https://docs.meilisearch.com/errors#index_already_exists'
                Invalid Index Uid:
                  value:
                    message: '`:indexUid` is not a valid index uid. Index uid can be an integer or a string containing only alphanumeric characters, hyphens (-) and underscores (_).'
                    code: invalid_index_uid
                    type: invalid_request
                    link: 'https://docs.meilisearch.com/errors#invalid_index_uid'
        '401':
          $ref: '#/components/responses/401'
      parameters:
        - $ref: '#/components/parameters/Content-Type'
  '/indexes/{indexUid}':
    get:
      operationId: indexes.get
      summary: Get Index
      description: Get information about an index.
      tags:
        - Indexes
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/index'
              examples:
                Example:
                  value:
                    uid: movies
                    name: movies
                    primaryKey: movie_id
                    createdAt: '2019-11-20T09:40:33.711324Z'
                    updatedAt: '2019-11-20T09:40:33.711324Z'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    put:
      operationId: indexes.update
      summary: Update Index
      description: Update an index. Add a primaryKey if it doesn't already exists yet.
      tags:
        - Indexes
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primaryKey:
                  type: string
              additionalProperties: false
              required:
                - primaryKey
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/index'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Primary Key Already Present:
                  value:
                    message: 'Index `:indexUid` already has a primary key.'
                    code: index_primary_key_already_exists
                    type: invalid_request
                    link: 'https://docs.meilisearch.com/errors#index_primary_key_already_exists'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.remove
      summary: Delete Index
      description: Delete an index.
      tags:
        - Indexes
      security:
        - apiKey: []
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/documents':
    get:
      operationId: indexes.documents.list
      summary: Get Documents
      description: |
        Get [documents](https://docs.meilisearch.com/learn/core_concepts/documents.html) by batch.
      tags:
        - Documents
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/document'
              examples:
                Example:
                  value:
                    - id: 25684
                      title: American Ninja 5
                      poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
                      overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'
                      release_date: '1993-01-01'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/fields'
    post:
      operationId: indexes.documents.create
      summary: Add or replace documents
      description: |
        Add a list of [documents](https://docs.meilisearch.com/learn/core_concepts/documents.html) or replace them if they already exist.

        If you send an already existing document (same [id](https://docs.meilisearch.com/learn/core_concepts/documents.html#primary-key)) the whole existing document will be overwritten by the new document. Fields previously in the document not present in the new document are removed.

        For a partial update of the document see Add or update documents route.

        > info
        > If the provided index does not exist, it will be created.

        > info
        > Use the reserved `_geo` object to add geo coordinates to a document. `_geo` is an object made of `lat` and `lng` field.
      tags:
        - Documents
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: null
            examples: {}
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '413':
          $ref: '#/components/responses/413'
      parameters:
        - schema:
            type: string
            enum:
              - application/json
              - text/csv
              - application/x-ndjson
          in: header
          name: Content-Type
          required: true
          description: The content-type associated with the format to be indexed
    put:
      operationId: indexes.documents.upsert
      summary: Add or update documents
      description: |-
        Add a list of documents or update them if they already exist.

        If you send an already existing document (same [id](https://docs.meilisearch.com/learn/core_concepts/documents.html#primary-key)) the old document will be only partially updated according to the fields of the new document. Thus, any fields not present in the new document are kept and remained unchanged.

        To completely overwrite a document, see Add or replace documents route.

        > info
        > If the provided index does not exist, it will be created.

        > info
        > Use the reserved `_geo` object to add geo coordinates to a document. `_geo` is an object made of `lat` and `lng` field.
      tags:
        - Documents
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/document'
            examples:
              Example:
                value:
                  - id: 25684
                    title: American Ninja 5
                    poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
                    overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'
                    release_date: '1993-01-01'
        description: ''
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '413':
          $ref: '#/components/responses/413'
      parameters:
        - schema:
            type: string
            enum:
              - application/json
              - text/csv
              - application/x-ndjson
          in: header
          name: Content-Type
          description: The content-type associated with the format to be indexed
          required: true
    delete:
      operationId: indexes.documents.removeAll
      summary: Delete all documents
      description: Delete all documents in the specified index.
      tags:
        - Documents
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/documents/delete-batch':
    post:
      operationId: indexes.documents.removeBatch
      summary: Delete documents
      description: Delete a selection of documents based on array of document id's.
      tags:
        - Documents
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: An array of document ids to delete
              items:
                type:
                  - string
                  - number
            examples:
              Example:
                value:
                  - 1
                  - 2
                  - 3
                  - a string id
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/documents/{documentId}':
    get:
      operationId: indexes.documents.get
      summary: Get one document
      description: 'Get one [document](https://docs.meilisearch.com/learn/core_concepts/documents.html) using its unique id.'
      tags:
        - Documents
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/document'
              examples: {}
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/fields'
    delete:
      operationId: indexes.documents.remove
      summary: Delete one document
      description: Delete one document based on its unique id.
      tags:
        - Documents
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
      - $ref: '#/components/parameters/documentId'
  '/indexes/{indexUid}/search':
    get:
      operationId: indexes.documents.searchGet
      summary: Search
      description: |
        Search for documents matching a specific query in the given index.

        This route should only be used when no API key is required. If an API key is required, use the POST route instead.
      tags:
        - Search
      security:
        - apiKey: []
      parameters:
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/attributesToRetrieve'
        - $ref: '#/components/parameters/attributesToHighlight'
        - $ref: '#/components/parameters/highlightPreTag'
        - $ref: '#/components/parameters/highlightPostTag'
        - $ref: '#/components/parameters/attributesToCrop'
        - $ref: '#/components/parameters/cropMarker'
        - $ref: '#/components/parameters/cropLength'
        - $ref: '#/components/parameters/facetsDistribution'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/matches'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
              examples:
                Example:
                  value:
                    hits:
                      - id: 25684
                        title: American Ninja 5
                        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
                        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'
                        release_date: '1993-01-01'
                        _formatted:
                          id: 25684
                          title: American Ninja 5
                          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
                          overview: 'When a scientists daughter is kidnapped, American <em>Ninja</em>, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the <em>ninja</em>.'
                          release_date: '1993-01-01'
                        _matchesInfo:
                          overview:
                            - start: 49
                              length: 5
                            - start: 155
                              length: 5
                    limit: 0
                    offset: 0
                    nbHits: 0
                    query: string
                    exhaustiveNbHits: true
                    processingTimeMs: 0
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.documents.search
      summary: Search
      description: |
        Search for documents matching a specific query in the given index.

        This is the preferred route to perform search when an API key is required, as it allows for [preflight requests](https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request) to be cached. Caching preflight requests improves considerably the speed of the search.
      tags:
        - Search
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                q:
                  type: string
                  description: Query string.
                  default: '""'
                  example: '"Back to the future"'
                attributesToRetrieve:
                  type: array
                  description: 'Array of attributes whose fields will be present in the returned documents. Defaults to the [displayedAttributes list](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) which contains by default all attributes found in the documents.'
                  items:
                    type: string
                    example: '["title", "overview"]'
                    default: '["*"]'
                attributesToHighlight:
                  type: array
                  description: Array of attributes whose values will contain highlighted matching terms. Highlighted attributes are returned in `_formatted` response object.
                  items:
                    type: string
                    example: '["title", "overview"]'
                    default: '[]'
                highlightPreTag:
                  type: string
                  description: Specify the tag to put before the highlighted query terms.
                  example: '<mark>'
                  default: '<em>'
                highlightPostTag:
                  type: string
                  description: Specify the tag to put after the highlighted query terms.
                  example: '</mark>'
                  default: '</em>'
                attributesToCrop:
                  type: array
                  description: Array of attributes whose values have to be cropped. Cropped attributes are returned in `_formatted` response object.
                  items:
                    type: string
                    example: '["overview", "author"]'
                    default: '[]'
                cropMarker:
                  type: string
                  description: Sets the crop marker to apply before and/or after cropped part selected within an attribute defined in `attributesToCrop` parameter.
                  default: '…'
                cropLength:
                  type: number
                  description: Sets the total number of **words** to keep for the cropped part of an attribute specified in the `attributesToCrop` parameter.
                  default: 10
                matches:
                  type: boolean
                  description: Defines whether an `_matchesInfo` object that contains information about the matches should be returned or not.
                  default: false
                filter:
                  $ref: '#/components/schemas/filter'
                facetsDistribution:
                  type: array
                  description: 'Array of attributes whose fields will be distributed as a facet. If you have [set up filterableAttributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes), you can retrieve the count of matching terms for each [facets](https://docs.meilisearch.com/reference/features/filtering_and_faceted_search.html#faceted-search).[Learn more about facet distribution in the dedicated guide](https://docs.meilisearch.com/reference/features/search_parameters.html#facets-distribution)'
                  items:
                    type: string
                    example: '["genres", "author"]'
                    default: '[]'
                offset:
                  type: number
                  description: Number of documents to skip.
                  default: 0
                limit:
                  type: number
                  description: Maximum number of documents returned.
                  default: 20
                sort:
                  $ref: '#/components/schemas/sort'
            examples:
              Example:
                value:
                  q: Harry
                  offset: 0
                  limit: 20
                  filter: (genres = Horror AND genres = Mystery) OR release_date > 523242000
                  facetsDistribution:
                    - genres
                    - author
                  attributesToRetrieve:
                    - title
                    - overview
                  attributesToCrop:
                    - overview
                  cropLength: 20
                  attributesToHighlight:
                    - overview
                  matches: true
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchResponse'
              examples:
                Example:
                  value:
                    hits:
                      - id: 25684
                        title: American Ninja 5
                        poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
                        overview: 'When a scientists daughter is kidnapped, American Ninja, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the ninja.'
                        release_date: '1993-01-01'
                        _formatted:
                          id: 25684
                          title: American Ninja 5
                          poster: 'https://image.tmdb.org/t/p/w1280/iuAQVI4mvjI83wnirpD8GVNRVuY.jpg'
                          overview: 'When a scientists daughter is kidnapped, American <em>Ninja</em>, attempts to find her, but this time he teams up with a youngster he has trained in the ways of the <em>ninja</em>.'
                          release_date: '1993-01-01'
                        _matchesInfo:
                          overview:
                            - start: 49
                              length: 5
                            - start: 155
                              length: 5
                    limit: 0
                    offset: 0
                    nbHits: 0
                    query: string
                    exhaustiveNbHits: true
                    processingTimeMs: 0
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings':
    get:
      operationId: indexes.settings.get
      summary: Get settings
      description: |
        Get the settings of an index.

        [Learn more about the settings](https://docs.meilisearch.com/reference/features/settings.html).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  rankingRules:
                    $ref: '#/components/schemas/rankingRules'
                  distinctAttribute:
                    $ref: '#/components/schemas/distinctAttribute'
                  searchableAttributes:
                    $ref: '#/components/schemas/searchableAttributes'
                  displayedAttributes:
                    $ref: '#/components/schemas/displayedAttributes'
                  stopWords:
                    $ref: '#/components/schemas/stopWords'
                  synonyms:
                    $ref: '#/components/schemas/synonyms'
                  filterableAttributes:
                    $ref: '#/components/schemas/filterableAttributes'
                  sortableAttributes:
                    $ref: '#/components/schemas/sortableAttributes'
                  typoTolerance:
                    $ref: '#/components/schemas/typoTolerance'
                required:
                  - rankingRules
                  - distinctAttribute
                  - searchableAttributes
                  - displayedAttributes
                  - stopWords
                  - synonyms
                  - filterableAttributes
                  - sortableAttributes
                  - typoTolerance
              examples:
                Example:
                  value:
                    rankingRules:
                      - words
                      - typo
                      - proximity
                      - attribute
                      - sort
                      - exactness
                      - 'release_date:asc'
                    distinctAttribute: ean13
                    searchableAttributes:
                      - title
                      - description
                      - genre
                    displayedAttributes:
                      - title
                      - description
                      - genre
                      - release_date
                    stopWords:
                      - of
                      - the
                      - to
                    synonyms:
                      wolverine:
                        - xmen
                        - logan
                      logan:
                        - wolverine
                        - xmen
                      wow:
                        - world of warcraft
                    filterableAttributes:
                      - genres
                      - director
                    sortableAttributes:
                      - price
                      - author
                      - title
                    typoTolerance:
                      enabled: true
                      disableOnAttributes:
                        - author
                        - price
                      disableOnWords:
                        - Tolkien
                      minWordSizeForTypos:
                        oneTypo: 4
                        twoTypos: 8
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.update
      summary: Update settings
      description: |
        Update the settings of an index.

        Updates in the settings route are partial. This means that any parameters not provided in the body will be left unchanged.
        [Learn more about the settings in this guide](https://docs.meilisearch.com/reference/features/settings.html).

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                synonyms:
                  $ref: '#/components/schemas/synonyms'
                stopWords:
                  $ref: '#/components/schemas/stopWords'
                rankingRules:
                  $ref: '#/components/schemas/rankingRules'
                distinctAttribute:
                  $ref: '#/components/schemas/distinctAttribute'
                searchableAttributes:
                  $ref: '#/components/schemas/searchableAttributes'
                displayedAttributes:
                  $ref: '#/components/schemas/displayedAttributes'
                filterableAttributes:
                  $ref: '#/components/schemas/filterableAttributes'
                sortableAttributes:
                  $ref: '#/components/schemas/sortableAttributes'
                typoTolerance:
                  $ref: '#/components/schemas/typoTolerance'
            examples:
              Example:
                value:
                  synonyms:
                    wolverine:
                      - xmen
                      - logan
                    logan:
                      - wolverine
                      - xmen
                    wow:
                      - world of warcraft
                  stopWords:
                    - of
                    - the
                    - to
                  rankingRules:
                    - words
                    - typo
                    - proximity
                    - attribute
                    - sort
                    - exactness
                    - 'release_date:asc'
                  distinctAttribute: ean13
                  searchableAttributes:
                    - title
                    - description
                    - genre
                  displayedAttributes:
                    - title
                    - description
                    - genre
                    - release_date
                  filterableAttributes: []
                  sortableAttributes: null
                  typoTolerance:
                    enabled: false
                    disableOnAttributes:
                      - title
                      - author
                    disableOnWords:
                      - Tolkien
                    minWordSizeForTypos:
                      oneTypo: 4
                      twoTypos: 8
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.reset
      summary: Reset settings
      description: |
        Reset the settings of an index.

        All settings will be reset to their default value.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/synonyms':
    get:
      operationId: indexes.settings.synonyms.get
      summary: Get synonyms
      description: |
        Get the list of [synonyms](https://docs.meilisearch.com/reference/features/synonyms.html) of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/synonyms'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.synonyms.update
      summary: Update synonyms
      description: |
        Update the list of [synonyms](https://docs.meilisearch.com/reference/features/synonyms.html) of an index. Synonyms are [normalized](https://docs.meilisearch.com/reference/features/synonyms.html#normalization).

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/synonyms'
            examples: {}
        description: ''
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.synonyms.reset
      summary: Reset synonyms
      description: |
        Reset the list of [synonyms](https://docs.meilisearch.com/reference/features/synonyms.html) of an index to its default value (`{}`).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/sortable-attributes':
    get:
      operationId: indexes.settings.sortable-attributes.get
      summary: Get sortable attributes
      description: |
        Get the list of [sortableAttributes](https://docs.meilisearch.com//reference/features/settings.html#sortable-attributes) of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sortableAttributes'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.sortable-attributes.update
      summary: Update sortable attributes
      description: |
        Update the list of [sortableAttributes](https://docs.meilisearch.com//reference/features/settings.html#sortable-attributes) of an index.

        > info
        > In order to enable sorting capabilities on geographic data, the `_geo` field must be added as a sortableAttribute.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sortableAttributes'
            examples: {}
        description: ''
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.sortable-attributes.reset
      summary: Reset sortable attributes
      description: |
        Reset the list of [sortableAttributes](https://docs.meilisearch.com//reference/features/settings.html#sortable-attributes) of an index to its default value (`[]`).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - name: indexUid
        in: path
        description: Index Unique Identifier
        required: true
        schema:
          type: string
          example: movies
  '/indexes/{indexUid}/settings/stop-words':
    get:
      operationId: indexes.settings.stopWords.get
      summary: Get stop-words
      description: |
        Get the list of [stop-words](https://docs.meilisearch.com/reference/features/stop_words.html) of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stopWords'
              examples: {}
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.stopWords.update
      summary: Update stop-words
      description: |
        Update the list of [stop-words](https://docs.meilisearch.com/reference/features/stop_words.html) of an index.

        If a list of stop-words already exists it will be overwritten (replaced).

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stopWords'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.stopWords.reset
      summary: Reset stop-words
      description: |
        Reset the list of [stop-words](https://docs.meilisearch.com/reference/features/stop_words.html) of an index to its default value (`[]`).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/ranking-rules':
    get:
      operationId: indexes.settings.rankingRules.get
      summary: Get ranking rules
      description: |
        Get the [ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html#ranking-rules) of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rankingRules'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.rankingRules.update
      summary: Update ranking rules
      description: |
        Update the [ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html#ranking-rules) of an index.

        To add your own ranking rule, you have to communicate either `asc` for ascending order or `desc` for descending order followed by the field name in brackets.

        * To apply an ascending custom ranking rule: `attribute_name:asc`
        * To apply a descending custom ranking rule: `attribute_name:desc`

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rankingRules'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.rankingRules.reset
      summary: Reset ranking rules
      description: |
        Reset the [ranking rules](https://docs.meilisearch.com/learn/core_concepts/relevancy.html#ranking-rules) of an index to its default value.

        Default Value:
        ```json
        ["words", "typo", "proximity", "attribute", "sort", "exactness"]
        ```

        To remove all ranking rules, which is not recommended in any case, you would send an empty array to the add or replace ranking rules route.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/typo-tolerance':
    get:
      operationId: indexes.settings.typoTolerance.get
      summary: Get typo tolerance configuration
      description: |
        Get the typo tolerance configuration of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/typoTolerance'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.typoTolerance.update
      summary: Update typo tolerance settings
      description: |
        Update the typo tolerance configuration of an index.

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/typoTolerance'
            examples: {}
        description: ''
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.typoTolerance.reset
      summary: Reset typo tolerance settings to the default configuration
      description: |
        Reset the typo tolerance settings of an index to its default configuration.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/filterable-attributes':
    get:
      operationId: indexes.settings.filterableAttributes.get
      summary: Get Filterable Attributes
      description: |
        Get the [filterable attributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes) of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/filterableAttributes'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.filterableAttributes.update
      summary: Update Filterable Attributes
      description: |
        Update the [filterable attributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes) of an index.

        > info
        > In order to enable filtering capabilities on geographic data, the `_geo` field must be added as a filterableAttribute.

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/filterableAttributes'
        description: ''
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.filterableAttributes.reset
      summary: Reset Filterable Attributes
      description: |
        Reset the [filterable attributes](https://docs.meilisearch.com/reference/features/settings.html#filterable-attributes) of an index to its default value (`[]`).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/distinct-attribute':
    get:
      operationId: indexes.settings.distinctAttribute.get
      summary: Get distinct attribute
      description: |
        Get the [distinct attribute](https://docs.meilisearch.com/reference/features/settings.html#distinct-attribute) field of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distinctAttribute'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.distinctAttribute.update
      summary: Update distinct attribute
      description: |
        Update the [distinct attribute](https://docs.meilisearch.com/reference/features/settings.html#distinct-attribute) field of an index.

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distinctAttribute'
        description: ''
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.distinctAttribute.reset
      summary: Reset distinct attribute
      description: |
        Reset the [distinct attribute](https://docs.meilisearch.com/reference/features/settings.html#distinct-attribute) field of an index to its default value (`null`).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/searchable-attributes':
    get:
      operationId: indexes.settings.searchableAttributes.get
      summary: Get searchable attributes
      description: |
        Get the [searchable attributes](https://docs.meilisearch.com/reference/features/field_properties.html#searchable-fields) of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/searchableAttributes'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.searchableAttributes.update
      summary: Update searchable attributes
      description: |
        Update the [searchable attributes](https://docs.meilisearch.com/reference/features/field_properties.html#searchable-fields) of an index.

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchableAttributes'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.searchableAttributes.reset
      summary: Reset searchable attributes
      description: |
        Reset the [searchable attributes](https://docs.meilisearch.com/reference/features/field_properties.html#searchable-fields) of an index to its default value (`['*']`).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/settings/displayed-attributes':
    get:
      operationId: indexes.settings.displayedAttributes.get
      summary: Get displayed attributes
      description: |
        Get the [displayed attributes](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) of an index.
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/displayedAttributes'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    post:
      operationId: indexes.settings.displayedAttributes.update
      summary: Update displayed attributes
      description: |
        Update the [displayed attributes](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) of an index.

        > info
        > If the provided index does not exist, it will be created.
      tags:
        - Settings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/displayedAttributes'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
      parameters:
        - $ref: '#/components/parameters/Content-Type'
    delete:
      operationId: indexes.settings.displayedAttributes.reset
      summary: Reset displayed attributes
      description: |
        Reset the [displayed attributes](https://docs.meilisearch.com/reference/features/settings.html#displayed-attributes) of an index to its default value (`['*']`).
      tags:
        - Settings
      security:
        - apiKey: []
      responses:
        '202':
          $ref: '#/components/responses/202'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/stats':
    get:
      operationId: indexes.stats.get
      summary: Get stat of an index
      description: Get stats of an index.
      tags:
        - Stats
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stats'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/tasks':
    get:
      operationId: indexes.tasks.list
      summary: Get all tasks of an index
      description: |
        Get all [tasks](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html) of an [index](https://docs.meilisearch.com/learn/core_concepts/indexes.html).
      tags:
        - Tasks
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
              examples:
                Example:
                  value:
                    results:
                      - uid: 1
                        indexUid: movies,
                        batchUid: 1
                        status: succeeded
                        type: documentAddition
                        details:
                          receivedDocuments: 79000
                          indexedDocuments: 79000
                        duration: PT2S
                        enqueuedAt: '2021-01-01T09:39:00.000000Z'
                        startedAt: '2021-01-01T09:39:01.000000Z'
                        finishedAt: '2021-01-01T09:39:02.000000Z'
                      - uid: 0
                        indexUid: movies
                        batchUid: 0
                        status: failed
                        type: documentAddition
                        details:
                          receivedDocuments: 67493
                          indexedDocuments: 0
                        error:
                          message: 'Document does not have a `:primaryKey` attribute: `:documentRepresentation`.'
                          code: missing_document_id
                          type: invalid_request
                          link: 'https://docs.meilisearch.com/errors#missing_document_id'
                        duration: PT5S
                        enqueuedAt: '2021-01-01T09:38:00.000000Z'
                        startedAt: '2021-01-01T09:38:02.000000Z'
                        finishedAt: '2021-01-01T09:38:07.000000Z'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
  '/indexes/{indexUid}/tasks/{taskUid}':
    get:
      operationId: indexes.tasks.get
      summary: Get a task of an index
      description: |
        Get a [task](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html) of an [index](https://docs.meilisearch.com/learn/core_concepts/indexes.html).
      tags:
        - Tasks
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
              examples:
                Example:
                  value:
                    uid: 1
                    indexUid: movies
                    batchUid: 1
                    status: succeeded
                    type: documentAddition
                    details:
                      receivedDocuments: 79000
                      indexedDocuments: 79000
                    duration: PT1S
                    enqueuedAt: '2021-01-01T09:39:00.000000Z'
                    startedAt: '2021-01-01T09:39:01.000000Z'
                    finishedAt: '2021-01-01T09:39:02.000000Z'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
    parameters:
      - $ref: '#/components/parameters/indexUid'
      - $ref: '#/components/parameters/taskUid'
  /keys:
    get:
      operationId: keys.list
      summary: Get API Keys
      description: |
        Get API Keys
      tags:
        - Keys
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/key'
              examples:
                example-1:
                  value:
                    results:
                      - key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4
                        actions:
                          - documents.add
                        indexes:
                          - movies
                        description: An API Key
                        expiresAt: '2022-11-12T10:00:00Z'
                        createdAt: '2021-11-12T10:00:00Z'
                        updatedAt: '2021-11-12T10:00:00Z'
        '401':
          $ref: '#/components/responses/401'
  '/keys/{key}':
    get:
      summary: Get an API key
      tags:
        - Keys
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key'
              examples:
                Fetch an API Key details:
                  value:
                    description: Indexing Products API key
                    key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4
                    actions:
                      - documents.add
                    indexes:
                      - products
                    expiresAt: '2021-11-13T00:00:00Z'
                    createdAt: '2021-11-12T10:00:00Z'
                    updatedAt: '2021-11-12T10:00:00Z'
      operationId: keys.get
      description: Get an API Key
    parameters:
      - schema:
          type: string
        name: key
        in: path
        required: true
        description: The API key value
    delete:
      summary: Delete an API key
      operationId: keys.delete
      tags:
        - Keys
      security:
        - apiKey: []
      responses:
        '204':
          $ref: '#/components/responses/204'
      description: ''
    patch:
      summary: Update an API key
      operationId: keys.update
      tags:
        - Keys
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key'
              examples:
                Patch an API Key Response:
                  value:
                    description: Indexing Products API key
                    key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4
                    actions:
                      - documents.add
                    indexes:
                      - products
                    expiresAt: '2021-11-13T00:00:00Z'
                    createdAt: '2021-11-12T10:00:00Z'
                    updatedAt: '2021-11-12T15:00:00Z'
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      description: Update an API Key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/key'
            examples:
              Patch an API Key Request:
                value:
                  description: Indexing Products API key
    post:
      summary: Create an API Key
      operationId: keys.create
      tags:
        - Keys
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key'
              examples:
                Create an API Key:
                  value:
                    description: Indexing Products API key
                    key: d0552b41536279a0ad88bd595327b96f01176a60c2243e906c52ac02375f9bc4
                    actions:
                      - documents.add
                    indexes:
                      - products
                    expiresAt: '2021-11-13T00:00:00Z'
                    createdAt: '2021-11-12T10:00:00Z'
                    updatedAt: '2021-11-12T10:00:00Z'
      parameters:
        - $ref: '#/components/parameters/Content-Type'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/key'
            examples:
              API Key Creation:
                value:
                  description: Indexing Products API key
                  actions:
                    - documents.add
                  indexes:
                    - products
                  expiresAt: '2021-11-13T00:00:00Z'
  /stats:
    get:
      operationId: stats.list
      summary: Get stats of all indexes
      description: Get stats of all indexes.
      tags:
        - Stats
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  databaseSize:
                    type: number
                  lastUpdate:
                    $ref: '#/components/schemas/timestamp'
                  indexes:
                    type: object
                    properties:
                      indexUid:
                        $ref: '#/components/schemas/stats'
                required:
                  - databaseSize
                  - lastUpdate
                  - indexes
              examples:
                Stats Of All Indexes:
                  value:
                    databaseSize: 567
                    lastUpdate: '2019-11-20T09:40:33.711324Z'
                    indexes:
                      movies:
                        numberOfDocuments: 10
                        isIndexing: true
                        fieldDistribution:
                          genre: 10
                          author: 9
        '401':
          $ref: '#/components/responses/401'
  /version:
    get:
      operationId: version.get
      summary: Get version of Meilisearch
      description: Get version of Meilisearch.
      tags:
        - Version
      security:
        - apiKey: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  commitSha:
                    type: string
                    example: b46889b5f0f2f8b91438a08a358ba8f05fc09fc1
                  commitDate:
                    type: string
                    example: '2021-07-08'
                  pkgVersion:
                    type: string
                    example: 0.1.1
                additionalProperties: false
                required:
                  - commitSha
                  - commitDate
                  - pkgVersion
              examples:
                Example:
                  value:
                    commitSha: b46889b5f0f2f8b91438a08a358ba8f05fc09fc1
                    commitDate: '2021-07-08'
                    pkgVersion: 0.23.0
        '401':
          $ref: '#/components/responses/401'
  /tasks:
    get:
      summary: Get all tasks
      description: 'Get all [tasks](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html)'
      tags:
        - tasks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/task'
              examples:
                Example:
                  value:
                    results:
                      - uid: 1
                        indexUid: movies
                        batchUid: 1
                        status: succeeded
                        type: documentAddition
                        details:
                          receivedDocuments: 79000
                          indexedDocuments: 79000
                        duration: PT1S
                        enqueuedAt: '2021-01-01T09:39:00.000000Z'
                        startedAt: '2021-01-01T09:39:01.000000Z'
                        finishedAt: '2021-01-01T09:39:02.000000Z'
                      - uid: 0
                        indexUid: movies_Review
                        batchUid: 0
                        status: failed
                        type: documentAddition
                        details:
                          receivedDocuments: 67493
                          indexedDocuments: 0
                        error:
                          message: 'Document does not have a `:primaryKey` attribute: `:documentRepresentation`.'
                          code: missing_document_id
                          type: invalid_request
                          link: 'https://docs.meilisearch.com/errors#missing_document_id'
                        duration: PT5S
                        enqueuedAt: '2021-01-01T09:38:00.000000Z'
                        startedAt: '2021-01-01T09:38:02.000000Z'
                        finishedAt: '2021-01-01T09:38:07.000000Z'
      operationId: tasks.list
      parameters: []
      security:
        - apiKey: []
  '/tasks/:taskUid':
    get:
      summary: Get a task
      description: 'Get a [task](https://docs.meilisearch.com/learn/advanced/asynchronous_operations.html) '
      tags:
        - tasks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/task'
              examples:
                Example:
                  value:
                    uid: 1
                    indexUid: movies
                    batchUid: 1
                    status: succeeded
                    type: documentAddition
                    details:
                      receivedDocuments: 79000
                      indexedDocuments: 79000
                    duration: PT1S
                    enqueuedAt: '2021-01-01T09:39:00.000000Z'
                    startedAt: '2021-01-01T09:39:01.000000Z'
                    finishedAt: '2021-01-01T09:39:02.000000Z'
        '401':
          $ref: '#/components/responses/401'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                Example:
                  value:
                    message: 'Task :taskUid not found.'
                    code: task_not_found
                    type: invalid_request
                    link: 'https://docs.meilisearch.com/errors/#task_not_found'
      operationId: tasks.get
      parameters: []
      security:
        - apiKey: []
    parameters:
      - $ref: '#/components/parameters/taskUid'
security: []
